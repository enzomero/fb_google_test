version: '3.7'

networks:
  backend:

volumes:
  notify_db:
  registration_db:
  zookeeper-data:
  kafka-data:

services:
  notify_api:
    hostname: notify-api
    build: ./notify-api
    image: net-services:notify_api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notify_db:5432/notify
      SPRING_DATASOURCE_USERNAME: 1111
      SPRING_DATASOURCE_PASSWORD: 1111
    ports:
      - "8090:8090"
    expose:
      - 8090
    restart: unless-stopped
    depends_on:
      - notify_db
    networks:
      - backend

  notify_web:
    hostname: notify-web
    build: ./notify-web
    image: net-services:notify_web
    environment:
      BOOTSTRAP: "kafka:9092"
    ports:
      - "8120:8120"
    expose:
      - 8120
    restart: unless-stopped
    depends_on:
      - kafka
    networks:
      - backend

  registration_api:
    hostname: registration-api
    build: ./registration-api
    image: net-services:registration_api
    environment:
      BOOTSTRAP: "kafka:9092"
      SPRING_DATASOURCE_URL: jdbc:postgresql://registration_db:5432/registration
      SPRING_DATASOURCE_USERNAME: 2222
      SPRING_DATASOURCE_PASSWORD: 2222
    ports:
      - "8100:8100"
    expose:
      - 8100
    restart: unless-stopped
    depends_on:
      - registration_db
    networks:
      - backend

  registration_web:
    hostname: registration-web
    build: ./registration-web
    image: net-services:registration_web
    environment:
      BOOTSTRAP: "kafka:9092"
    ports:
      - "8110:8110"
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - kafka

  firebase_adapter:
    hostname: firebase-adapter
    build: ./firebase-adapter
    image: net-services:firebase_adapter
    environment:
      BOOTSTRAP: "kafka:9092"
      REG_API_HOST: registration-api:8100
    ports:
      - "8130:8130"
    expose:
      - 8130
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - kafka

############################################

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      APP_KAFKA_TOPICS: "registration:1:1,notification:1:1,push:1:1"
    volumes:
      - kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - backend

  notify_db:
    container_name: notify_db
    image: postgres:12-alpine
    ports:
      - "54320:5432"
    volumes:
      - notify_db:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: 1111
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: notify
    restart: unless-stopped
    networks:
      - backend

  registration_db:
    container_name: registration_db
    image: postgres:12-alpine
    ports:
      - "54321:5432"
    expose:
      - 54321
    volumes:
      - registration_db:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: 2222
      POSTGRES_PASSWORD: 2222
      POSTGRES_DB: registration
    restart: unless-stopped
    networks:
      - backend